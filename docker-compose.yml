version: '3.8'  

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "8002:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "tech_Chalenge123!"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.1

  api:
    container_name: api
    image: ${DOCKER_REGISTRY:-}techchallengeapi
    ports:
      - "8001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - sqlserver
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.2

  add_service:
    container_name: add_service
    image: ${DOCKER_REGISTRY:-}techchallengeadd
    ports:
      - "8003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechChallengeAdd/Dockerfile
    depends_on:
      - api
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.3

  buscaid_service:
    container_name: buscaid_service
    image: ${DOCKER_REGISTRY:-}techchallengebuscaid
    ports:
      - "8004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechchallengeBuscaId/Dockerfile
    depends_on:
      - add_service
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.4

  buscatodos_service:
    container_name: buscatodos_service
    image: ${DOCKER_REGISTRY:-}techchallengebuscatodos
    ports:
      - "8005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechchallengeBuscaTodos/Dockerfile
    depends_on:
      - buscaid_service
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.5

  update_service:
    container_name: update_service
    image: ${DOCKER_REGISTRY:-}techchallengeupbate
    ports:
      - "8006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./techchallengeUpdate/Dockerfile
    depends_on:
      - buscaid_service
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.6

  delete_service:
    container_name: delete_service
    image: ${DOCKER_REGISTRY:-}techchallengedelete
    ports:
      - "8004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./techchallengeDelete/Dockerfile
    depends_on:
      - update_service
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.8


  buscaddd_service:
    container_name: buscaddd_service
    image: ${DOCKER_REGISTRY:-}techchallengedelete
    ports:
      - "8004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./techchallengeBuscaDdd/Dockerfile
    depends_on:
      - update_service
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.8    

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - buscaddd_service
    ports:
      - "9090:9090"
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.9

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.10

  rabbitmq:
    image: masstransit/rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    depends_on:
      - prometheus
    networks:
      techchallenge_techchallenge-network:
        ipv4_address: 192.168.1.11

volumes:
  sqlserver-data:
  api:
  add_service:
  buscaid_service:
  buscatodos_service:
  update_service:
  delete_service:
  buscaddd_service:
  prometheus-data:
  grafana-data:
  rabbitmq:

networks:
  techchallenge_techchallenge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/16