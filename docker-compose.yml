services:

  rabbitmq:
    image: masstransit/rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
       - ./rabbitmq/dados:/var/lib/rabbitmq/
    networks:
      - techchallenge_techchallenge-network
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "8002:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "tech_Chalenge123!"
    expose:
      - 1433
    volumes:
      - sqlserver-data:/var/opt/mssql
    depends_on:
      - rabbitmq
    networks:
      - techchallenge_techchallenge-network

  api:
    container_name: api
    image: ${DOCKER_REGISTRY:-}techchallengeapi
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - sqlserver
    networks:
      - techchallenge_techchallenge-network
  buscaid_service:
    container_name: buscaid_service
    image: ${DOCKER_REGISTRY:-}techchallengebuscaid
    ports:
      - "8081:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechchallengeBuscaId/Dockerfile
    depends_on:
      - api
    networks:
      - techchallenge_techchallenge-network

  add_service:
    container_name: add_service
    image: ${DOCKER_REGISTRY:-}techchallengeadd
    ports:
      - "8082:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechchallengeAdd/Dockerfile
    depends_on:
      - buscaid_service
    networks:
      - techchallenge_techchallenge-network

  buscatodos_service:
    container_name: buscatodos_service
    image: ${DOCKER_REGISTRY:-}techchallengebuscatodos
    ports:
      - "8083:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechChallengeBuscaTodos/Dockerfile
    depends_on:
      - add_service
    networks:
      - techchallenge_techchallenge-network

  update_service:
    container_name: update_service
    image: ${DOCKER_REGISTRY:-}techchallengeupdate
    ports:
      - "8084:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechChallengeUpdate/Dockerfile
    depends_on:
      - buscatodos_service
    networks:
      - techchallenge_techchallenge-network
  delete_service:
    container_name: delete_service
    image: ${DOCKER_REGISTRY:-}techchallengedelete
    ports:
      - "8085:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechChallengeDelete/Dockerfile
    depends_on:
      - update_service
    networks:
      - techchallenge_techchallenge-network

  buscadd_service:
    container_name: buscadd_service
    image: ${DOCKER_REGISTRY:-}techchallengeddd
    ports:
      - "8086:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=Server=sqlserver,1433;Database=TechChallenge;User Id=sa;Password=tech_Chalenge123!;TrustServerCertificate=True
    build:
      context: .
      dockerfile: ./TechChallengeBuscaDdd/Dockerfile
    depends_on:
      - delete_service
    networks:
      - techchallenge_techchallenge-network


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - buscadd_service
    ports:
      - "9090:9090"
    networks:
      - techchallenge_techchallenge-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - techchallenge_techchallenge-network

volumes:
  rabbitmq:
  sqlserver-data:
  api:
  add_service:
  buscadd_service:
  buscaid_service:
  buscatodos_service:
  delete_service:
  update_service:
  prometheus-data:
  grafana-data:


networks:
  techchallenge_techchallenge-network:
    driver: bridge
